"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.DELETEUsersSourceUserIdBlockingTargetUserIdRoute = exports.POSTUsersIdBlockingRoute = exports.GETUsersIdBlockingRoute = void 0;
/**
 * Generates route for fetching users blocked by a user:
 * - GET `/users/:id/blocking`
 * @param userId The user id to block
 *
 * @see https://developer.twitter.com/en/docs/twitter-api/users/blocks/api-reference/get-users-blocking
 *
 */
function GETUsersIdBlockingRoute(userId) {
    return `/users/${userId}/blocking`;
}
exports.GETUsersIdBlockingRoute = GETUsersIdBlockingRoute;
/**
 * Generates route for blocking a user:
 * - POST `/users/:id/blocking`
 * @param userId The user id to block
 *
 * @see https://developer.twitter.com/en/docs/twitter-api/users/blocks/api-reference/post-users-user_id-blocking
 *
 */
function POSTUsersIdBlockingRoute(userId) {
    return `/users/${userId}/blocking`;
}
exports.POSTUsersIdBlockingRoute = POSTUsersIdBlockingRoute;
/**
 * Generates route for unblocking a user:
 * - DELETE `/users/:source_user_id/blocking/:target_user_id`
 * @param sourceUserId The user id to send the request on behalf of
 * @param targetUserId The user id to unblock
 *
 * @see https://developer.twitter.com/en/docs/twitter-api/users/blocks/api-reference/delete-users-user_id-blocking
 */
function DELETEUsersSourceUserIdBlockingTargetUserIdRoute(sourceUserId, targetUserId) {
    return `/users/${sourceUserId}/blocking/${targetUserId}`;
}
exports.DELETEUsersSourceUserIdBlockingTargetUserIdRoute = DELETEUsersSourceUserIdBlockingTargetUserIdRoute;
//# sourceMappingURL=Blocks.js.map