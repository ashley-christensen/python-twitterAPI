import type { MultipleTweetsLookupQuery, MultipleTweetsLookupResponse } from '../tweets';
import type { MultipleUsersLookupQuery, MultipleUsersLookupResponse } from '../users';
import type { SingleSpaceLookupQuery, SingleSpaceLookupResponse, MultipleSpacesLookupQuery, MultipleSpacesLookupResponse } from './index';
/**
 * The query for fetching a space by its id
 *
 * @see https://developer.twitter.com/en/docs/twitter-api/spaces/lookup/api-reference/get-spaces-id
 */
export declare type GETSpacesIdQuery = SingleSpaceLookupQuery;
/**
 * The response of fetching a space by its id
 *
 * @see https://developer.twitter.com/en/docs/twitter-api/spaces/lookup/api-reference/get-spaces-id
 */
export declare type GETSpacesIdResponse = SingleSpaceLookupResponse;
/**
 * Generates route for fetching a space by its id
 * - GET `/spaces/:id`
 * @param spaceId The space id to fetch
 */
export declare function GETSpacesIdRoute(spaceId: string): `/spaces/${string}`;
/**
 * The query for fetching spaces by their ids
 *
 * @see https://developer.twitter.com/en/docs/twitter-api/spaces/lookup/api-reference/get-spaces
 */
export interface GETSpacesQuery extends MultipleSpacesLookupQuery {
    ids: Array<string>;
}
/**
 * The response of fetching spaces by their ids
 *
 * @see https://developer.twitter.com/en/docs/twitter-api/spaces/lookup/api-reference/get-spaces
 */
export declare type GETSpacesResponse = MultipleSpacesLookupResponse;
/**
 * Generates route for fetching spaces by their ids:
 * - GET `/spaces`
 *
 * @see https://developer.twitter.com/en/docs/twitter-api/spaces/lookup/api-reference/get-spaces
 */
export declare function GETSpacesRoute(): "/spaces";
/**
 * The query for fetching users who purchased a ticket for a space
 *
 * @see https://developer.twitter.com/en/docs/twitter-api/spaces/lookup/api-reference/get-spaces-id-buyers
 */
export interface GETSpacesIdBuyersQuery extends MultipleUsersLookupQuery {
    pagination_token?: string;
}
/**
 * The response of fetching users who purchased a ticket for a space
 *
 * @see https://developer.twitter.com/en/docs/twitter-api/spaces/lookup/api-reference/get-spaces-id-buyers
 */
export interface GETSpacesIdBuyersResponse extends MultipleUsersLookupResponse {
    meta: {
        result_count: number;
        previous_token?: string;
        next_token?: string;
    };
}
/**
 * Generates route for fetching users who purchased a ticket for a space:
 * - GET `/spaces/:id/buyers`
 * @param spaceId The space id whose buyers are to be fetched
 *
 * @see https://developer.twitter.com/en/docs/twitter-api/spaces/lookup/api-reference/get-spaces-id-buyers
 */
export declare function GETSpacesIdBuyersRoute(spaceId: string): `/spaces/${string}/buyers`;
/**
 * The query for fetching spaces created by users
 *
 * @see https://developer.twitter.com/en/docs/twitter-api/spaces/lookup/api-reference/get-spaces-by-creator-ids
 */
export interface GETSpacesByCreatorIdsQuery extends MultipleSpacesLookupQuery {
    user_ids: Array<string>;
}
/**
 * The response of fetching spaces created by users
 *
 * @see https://developer.twitter.com/en/docs/twitter-api/spaces/lookup/api-reference/get-spaces-by-creator-ids
 */
export interface GETSpacesByCreatorIdsResponse extends MultipleSpacesLookupResponse {
    meta: {
        result_count: number;
    };
}
/**
 * Generates route for fetching spaces created by users:
 * - GET `/spaces/by/creator_ids`
 *
 * @see https://developer.twitter.com/en/docs/twitter-api/spaces/lookup/api-reference/get-spaces-by-creator-ids
 */
export declare function GETSpacesByCreatorIdsRoute(): "/spaces/by/creator_ids";
/**
 * The query for fetching tweets shared in a space
 *
 * @see https://developer.twitter.com/en/docs/twitter-api/spaces/lookup/api-reference/get-spaces-id-tweets
 */
export interface GETSpacesIdTweetsQuery extends MultipleTweetsLookupQuery {
    max_results?: number;
}
/**
 * The response of fetching tweets shared in a space
 *
 * @see https://developer.twitter.com/en/docs/twitter-api/spaces/lookup/api-reference/get-spaces-id-tweets
 */
export interface GETSpacesIdTweetsResponse extends MultipleTweetsLookupResponse {
    meta: {
        result_count: number;
    };
}
/**
 * Generates route for fetching tweets shared in a space:
 * - GET `/spaces/:id/tweets`
 * @param spaceId The space id whose shared tweets are to be fetched
 *
 * @see https://developer.twitter.com/en/docs/twitter-api/spaces/lookup/api-reference/get-spaces-id-tweets
 */
export declare function GETSpacesIdTweetsRoute(spaceId: string): string;
//# sourceMappingURL=SpacesLookup.d.ts.map