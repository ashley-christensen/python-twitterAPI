import type { APISpace, APIUser } from '../../payloads';
import type { APIUserFieldsParameterType } from '../users';
export * from './SearchSpaces';
export * from './SpacesLookup';
export declare type APISpaceExpansionsParameterType = 'invited_user_ids' | 'speaker_ids' | 'creator_id' | 'host_ids';
export declare const APISpaceExpansionsParameters: Array<APISpaceExpansionsParameterType>;
export declare type APISpaceFieldsParameterType = keyof APISpace;
export declare const APISpaceFieldsParameters: Array<APISpaceFieldsParameterType>;
export interface APISpaceExpansions {
    users?: Array<APIUser>;
}
export interface SingleSpaceLookupQuery {
    expansions?: Array<APISpaceExpansionsParameterType>;
    'space.fields'?: Array<APISpaceFieldsParameterType>;
    'topic.fields'?: 'id' | 'name' | 'description';
    'user.fields'?: Array<APIUserFieldsParameterType>;
}
export interface SingleSpaceLookupResponse {
    data: APISpace;
    includes?: APISpaceExpansions;
}
export declare type MultipleSpacesLookupQuery = SingleSpaceLookupQuery;
export interface MultipleSpacesLookupResponse {
    data: Array<APISpace>;
    includes?: APISpaceExpansions;
}
//# sourceMappingURL=index.d.ts.map