"use strict";
var __classPrivateFieldGet = (this && this.__classPrivateFieldGet) || function (receiver, state, kind, f) {
    if (kind === "a" && !f) throw new TypeError("Private accessor was defined without a getter");
    if (typeof state === "function" ? receiver !== state || !f : !state.has(receiver)) throw new TypeError("Cannot read private member from an object whose class did not declare it");
    return kind === "m" ? f : kind === "a" ? f.call(receiver) : f ? f.value : state.get(receiver);
};
var _List_instances, _List_patchOwner;
Object.defineProperty(exports, "__esModule", { value: true });
exports.List = void 0;
const SimplifiedUser_1 = require("./SimplifiedUser");
const SimplifiedList_1 = require("./SimplifiedList");
class List extends SimplifiedList_1.SimplifiedList {
    constructor(client, data) {
        super(client, data.data);
        _List_instances.add(this);
        this.owner = __classPrivateFieldGet(this, _List_instances, "m", _List_patchOwner).call(this, data.includes?.users) ?? null;
    }
}
exports.List = List;
_List_instances = new WeakSet(), _List_patchOwner = function _List_patchOwner(users) {
    if (!users)
        return;
    const rawOwner = users.find(user => user.id === this.ownerId);
    if (!rawOwner)
        return;
    return new SimplifiedUser_1.SimplifiedUser(this.client, rawOwner);
};
//# sourceMappingURL=List.js.map