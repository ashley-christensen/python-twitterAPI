"use strict";
var __classPrivateFieldGet = (this && this.__classPrivateFieldGet) || function (receiver, state, kind, f) {
    if (kind === "a" && !f) throw new TypeError("Private accessor was defined without a getter");
    if (typeof state === "function" ? receiver !== state || !f : !state.has(receiver)) throw new TypeError("Cannot read private member from an object whose class did not declare it");
    return kind === "m" ? f : kind === "a" ? f.call(receiver) : f ? f.value : state.get(receiver);
};
var _User_instances, _User_patchPinnedTweet;
Object.defineProperty(exports, "__esModule", { value: true });
exports.User = void 0;
const SimplifiedUser_1 = require("./SimplifiedUser");
const SimplifiedTweet_1 = require("./SimplifiedTweet");
class User extends SimplifiedUser_1.SimplifiedUser {
    constructor(client, data) {
        super(client, data.data);
        _User_instances.add(this);
        this.pinnedTweet = __classPrivateFieldGet(this, _User_instances, "m", _User_patchPinnedTweet).call(this, data.includes?.tweets) ?? null;
    }
}
exports.User = User;
_User_instances = new WeakSet(), _User_patchPinnedTweet = function _User_patchPinnedTweet(tweets) {
    if (!tweets)
        return;
    const rawPinnedTweet = tweets.find(tweet => tweet.id === this.pinnedTweetId);
    if (!rawPinnedTweet)
        return;
    return new SimplifiedTweet_1.SimplifiedTweet(this.client, rawPinnedTweet);
};
//# sourceMappingURL=User.js.map