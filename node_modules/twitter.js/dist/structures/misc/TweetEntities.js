"use strict";
var __classPrivateFieldGet = (this && this.__classPrivateFieldGet) || function (receiver, state, kind, f) {
    if (kind === "a" && !f) throw new TypeError("Private accessor was defined without a getter");
    if (typeof state === "function" ? receiver !== state || !f : !state.has(receiver)) throw new TypeError("Cannot read private member from an object whose class did not declare it");
    return kind === "m" ? f : kind === "a" ? f.call(receiver) : f ? f.value : state.get(receiver);
};
var _TweetEntities_instances, _TweetEntities_patchAnnotations, _TweetEntities_patchCashtags, _TweetEntities_patchHashtags, _TweetEntities_patchMentions, _TweetEntities_patchUrls;
Object.defineProperty(exports, "__esModule", { value: true });
exports.TweetURLEntity = exports.TweetMentionEntity = exports.TweetHashtagEntity = exports.TweetCashtagEntity = exports.TweetAnnotationEntity = exports.TweetBaseEntity = exports.TweetEntities = void 0;
class TweetEntities {
    constructor(data) {
        _TweetEntities_instances.add(this);
        this.annotations = __classPrivateFieldGet(this, _TweetEntities_instances, "m", _TweetEntities_patchAnnotations).call(this, data.annotations);
        this.cashtags = __classPrivateFieldGet(this, _TweetEntities_instances, "m", _TweetEntities_patchCashtags).call(this, data.cashtags);
        this.hashtags = __classPrivateFieldGet(this, _TweetEntities_instances, "m", _TweetEntities_patchHashtags).call(this, data.hashtags);
        this.mentions = __classPrivateFieldGet(this, _TweetEntities_instances, "m", _TweetEntities_patchMentions).call(this, data.mentions);
        this.urls = __classPrivateFieldGet(this, _TweetEntities_instances, "m", _TweetEntities_patchUrls).call(this, data.urls);
    }
}
exports.TweetEntities = TweetEntities;
_TweetEntities_instances = new WeakSet(), _TweetEntities_patchAnnotations = function _TweetEntities_patchAnnotations(rawTweetAnnotations) {
    const tweetAnnotationsArray = [];
    if (!rawTweetAnnotations)
        return tweetAnnotationsArray;
    for (const rawTweetAnnotation of rawTweetAnnotations) {
        const tweetAnnotation = new TweetAnnotationEntity(rawTweetAnnotation);
        tweetAnnotationsArray.push(tweetAnnotation);
    }
    return tweetAnnotationsArray;
}, _TweetEntities_patchCashtags = function _TweetEntities_patchCashtags(rawTweetCashtags) {
    const tweetCashtagsArray = [];
    if (!rawTweetCashtags)
        return tweetCashtagsArray;
    for (const rawTweetCashtag of rawTweetCashtags) {
        const tweetCashtag = new TweetCashtagEntity(rawTweetCashtag);
        tweetCashtagsArray.push(tweetCashtag);
    }
    return tweetCashtagsArray;
}, _TweetEntities_patchHashtags = function _TweetEntities_patchHashtags(rawTweetHashtags) {
    const tweetHashtagsArray = [];
    if (!rawTweetHashtags)
        return tweetHashtagsArray;
    for (const rawTweetHashtag of rawTweetHashtags) {
        const tweetHashtag = new TweetHashtagEntity(rawTweetHashtag);
        tweetHashtagsArray.push(tweetHashtag);
    }
    return tweetHashtagsArray;
}, _TweetEntities_patchMentions = function _TweetEntities_patchMentions(rawTweetMentions) {
    const tweetMentionsArray = [];
    if (!rawTweetMentions)
        return tweetMentionsArray;
    for (const rawTweetMention of rawTweetMentions) {
        const tweetMention = new TweetMentionEntity(rawTweetMention);
        tweetMentionsArray.push(tweetMention);
    }
    return tweetMentionsArray;
}, _TweetEntities_patchUrls = function _TweetEntities_patchUrls(rawTweetUrls) {
    const tweetUrlsArray = [];
    if (!rawTweetUrls)
        return tweetUrlsArray;
    for (const rawTweetUrl of rawTweetUrls) {
        const tweetUrl = new TweetURLEntity(rawTweetUrl);
        tweetUrlsArray.push(tweetUrl);
    }
    return tweetUrlsArray;
};
class TweetBaseEntity {
    constructor(data) {
        this.start = data.start;
        this.end = data.end;
    }
}
exports.TweetBaseEntity = TweetBaseEntity;
class TweetAnnotationEntity extends TweetBaseEntity {
    constructor(data) {
        super(data);
        this.probability = data.probability;
        this.type = data.type;
        this.normalizedText = data.normalized_text;
    }
}
exports.TweetAnnotationEntity = TweetAnnotationEntity;
class TweetCashtagEntity extends TweetBaseEntity {
    constructor(data) {
        super(data);
        this.tag = data.tag;
    }
}
exports.TweetCashtagEntity = TweetCashtagEntity;
class TweetHashtagEntity extends TweetBaseEntity {
    constructor(data) {
        super(data);
        this.tag = data.tag;
    }
}
exports.TweetHashtagEntity = TweetHashtagEntity;
class TweetMentionEntity extends TweetBaseEntity {
    constructor(data) {
        super(data);
        this.username = data.username;
        this.id = data.id;
    }
}
exports.TweetMentionEntity = TweetMentionEntity;
class TweetURLEntity extends TweetBaseEntity {
    constructor(data) {
        super(data);
        this.url = data.url;
        this.expandedURL = data.expanded_url;
        this.displayURL = data.display_url;
        this.status = data.status;
        this.title = data.title;
        this.description = data.description;
        this.unwoundURL = data.unwound_url;
    }
}
exports.TweetURLEntity = TweetURLEntity;
//# sourceMappingURL=TweetEntities.js.map