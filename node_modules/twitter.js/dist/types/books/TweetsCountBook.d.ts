import { BaseRangeBook, type BaseRangeBookOptions } from './BaseRangeBook';
import { TweetCountBucket } from '../structures';
import type { Client } from '../client';
import type { GETTweetsCountsRecentQuery } from 'twitter-types';
/**
 * A class for fetching number of tweets matching a search query
 */
export declare class TweetsCountBook extends BaseRangeBook {
    #private;
    /**
     * The query for searching the tweets
     */
    query: string;
    /**
     * The book will group buckets according to this granularity
     */
    granularity: GETTweetsCountsRecentQuery['granularity'] | null;
    /**
     * @param client The logged in {@link Client} instance
     * @param options The options to initialize the book with
     */
    constructor(client: Client, options: TweetsCountBookOptions);
    /**
     * Fetches the next page of the book if there is one.
     * @returns
     */
    fetchNextPage(): Promise<Array<TweetCountBucket>>;
}
export interface TweetsCountBookOptions extends BaseRangeBookOptions {
    /**
     * The query for matching tweets
     */
    query: string;
    /**
     * The granularity of the {@link TweetCountBucket}
     */
    granularity?: GETTweetsCountsRecentQuery['granularity'];
}
//# sourceMappingURL=TweetsCountBook.d.ts.map