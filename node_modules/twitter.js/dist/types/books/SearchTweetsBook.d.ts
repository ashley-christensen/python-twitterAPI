import { Collection } from '../util';
import { BaseRangeBook, type BaseRangeBookOptions } from './BaseRangeBook';
import type { Client } from '../client';
import type { Tweet } from '../structures';
import type { GETTweetsSearchRecentQuery } from 'twitter-types';
/**
 * A class for fetching tweets using a search query
 */
export declare class SearchTweetsBook extends BaseRangeBook {
    #private;
    /**
     * The query for searching the tweets
     */
    query: string;
    /**
     * The order in which tweets would return
     */
    sortOrder: GETTweetsSearchRecentQuery['sort_order'] | null;
    /**
     * @param client The logged in {@link Client} instance
     * @param options The options to initialize the book with
     */
    constructor(client: Client, options: SearchTweetsBookOptions);
    /**
     * Fetches the next page of the book if there is one.
     * @returns A {@link Collection} of {@link Tweet} matching the given search query
     */
    fetchNextPage(): Promise<Collection<string, Tweet>>;
}
export interface SearchTweetsBookOptions extends BaseRangeBookOptions {
    query: string;
    /**
     * The order in which tweets should be returned
     * @default 'recency'
     */
    sortOrder: GETTweetsSearchRecentQuery['sort_order'];
}
//# sourceMappingURL=SearchTweetsBook.d.ts.map