import type { APIUserBaseEntity, APIUserCashtagEntity, APIUserEntities, APIUserEntitiesDescription, APIUserHashtagEntity, APIUserMentionEntity, APIUserURLEntity } from 'twitter-types';
export declare class UserEntities {
    url: UserURLEntity | null;
    description: UserDescriptionEntity | null;
    constructor(data: APIUserEntities);
}
export declare class UserDescriptionEntity {
    #private;
    urls: Array<UserURLEntity>;
    hashtags: Array<UserHashtagEntity>;
    mentions: Array<UserMentionEntity>;
    cashtags: Array<UserCashtagEntity>;
    constructor(data: APIUserEntitiesDescription);
}
export declare class UserBaseEntity {
    start: number;
    end: number;
    constructor(data: APIUserBaseEntity);
}
export declare class UserCashtagEntity extends UserBaseEntity {
    tag: string;
    constructor(data: APIUserCashtagEntity);
}
export declare class UserHashtagEntity extends UserBaseEntity {
    tag: string;
    constructor(data: APIUserHashtagEntity);
}
export declare class UserMentionEntity extends UserBaseEntity {
    username: string;
    constructor(data: APIUserMentionEntity);
}
export declare class UserURLEntity extends UserBaseEntity {
    url: string;
    expandedURL: string;
    displayURL: string;
    constructor(data: APIUserURLEntity);
}
//# sourceMappingURL=UserEntities.d.ts.map