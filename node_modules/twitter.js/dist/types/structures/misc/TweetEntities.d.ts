import type { APITweetAnnotationEntity, APITweetBaseEntity, APITweetCashtagEntity, APITweetEntities, APITweetHashtagEntity, APITweetMentionEntity, APITweetURLEntity } from 'twitter-types';
export declare class TweetEntities {
    #private;
    annotations: Array<TweetAnnotationEntity>;
    cashtags: Array<TweetCashtagEntity>;
    hashtags: Array<TweetHashtagEntity>;
    mentions: Array<TweetMentionEntity>;
    urls: Array<TweetURLEntity>;
    constructor(data: APITweetEntities);
}
export declare class TweetBaseEntity {
    start: number;
    end: number;
    constructor(data: APITweetBaseEntity);
}
export declare class TweetAnnotationEntity extends TweetBaseEntity {
    probability: number;
    type: string;
    normalizedText: string;
    constructor(data: APITweetAnnotationEntity);
}
export declare class TweetCashtagEntity extends TweetBaseEntity {
    tag: string;
    constructor(data: APITweetCashtagEntity);
}
export declare class TweetHashtagEntity extends TweetBaseEntity {
    tag: string;
    constructor(data: APITweetHashtagEntity);
}
export declare class TweetMentionEntity extends TweetBaseEntity {
    username: string;
    id: string;
    constructor(data: APITweetMentionEntity);
}
export declare class TweetURLEntity extends TweetBaseEntity {
    url: string;
    expandedURL: string;
    displayURL: string;
    status: string;
    title: string;
    description: string;
    unwoundURL: string;
    constructor(data: APITweetURLEntity);
}
//# sourceMappingURL=TweetEntities.d.ts.map