import { Poll } from './Poll';
import { Place } from './Place';
import { Media } from './Media';
import { Collection } from '../util';
import { SimplifiedUser } from './SimplifiedUser';
import { SimplifiedTweet } from './SimplifiedTweet';
import type { Client } from '../client';
import type { SingleTweetLookupResponse } from 'twitter-types';
/**
 * The class that represents a tweet on Twitter
 */
export declare class Tweet extends SimplifiedTweet {
    #private;
    /**
     * The author of the tweet
     */
    author: SimplifiedUser | null;
    /**
     * The users mentioned in the tweet
     */
    mentions: Collection<string, SimplifiedUser>;
    /**
     * The original tweet if this tweet is a reply
     */
    repliedTo: SimplifiedTweet | null;
    /**
     * The original tweet if this tweet is a quote
     */
    quoted: SimplifiedTweet | null;
    /**
     * The polls in the tweet
     */
    polls: Collection<string, Poll>;
    /**
     * The places tagged in the tweet
     */
    places: Collection<string, Place>;
    /**
     * The media contents in the tweet
     */
    media: Collection<string, Media>;
    constructor(client: Client, data: SingleTweetLookupResponse);
}
//# sourceMappingURL=Tweet.d.ts.map