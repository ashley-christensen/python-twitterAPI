import { BaseStructure } from './BaseStructure';
import { TweetNonPublicMetrics, TweetOrganicMetrics, TweetPromotedMetrics, TweetPublicMetrics, TweetContextAnnotation, TweetAttachments, TweetGeo, TweetReference, TweetEntities, TweetWithheld } from './misc';
import type { Client } from '../client';
import type { APITweet, APITweetReplySettings } from 'twitter-types';
import type { TweetCreateOptions } from '../managers';
/**
 * A simplified version of {@link Tweet} class
 */
export declare class SimplifiedTweet extends BaseStructure {
    #private;
    /**
     * The actual `UTF-8` text of the Tweet
     */
    text: string;
    /**
     * The type of attachments (if any) present in the Tweet
     */
    attachments: TweetAttachments | null;
    /**
     * The unique identifier of the User who posted the Tweet
     */
    authorId: string | null;
    /**
     * Contains context annotations for the Tweet
     */
    contextAnnotations: Array<TweetContextAnnotation>;
    /**
     * The ID of the original Tweet of the conversation (which includes direct replies, replies of replies)
     */
    conversationId: string | null;
    /**
     * The `ISO 8601` creation time of the Tweet
     */
    createdAt: Date | null;
    /**
     * The entities which have been parsed out of the text of the Tweet
     */
    entities: TweetEntities | null;
    /**
     * The details about the location tagged by the user in the Tweet, if they specified one
     */
    geo: TweetGeo | null;
    /**
     * If the Tweet is a reply, this field will contain the original Tweet’s author ID.
     * This will not necessarily always be the user directly mentioned in the Tweet
     */
    inReplyToUserId: string | null;
    /**
     * The language of the Tweet, if detected by Twitter. Returned as a `BCP47` language tag
     */
    lang: string | null;
    /**
     * Non-public engagement metrics for the Tweet at the time of the request.
     * Requires user context authentication
     */
    nonPublicMetrics: TweetNonPublicMetrics | null;
    /**
     * Engagement metrics tracked in an organic context for the Tweet at the time of the request.
     * Requires user context authentication
     */
    organicMetrics: TweetOrganicMetrics | null;
    /**
     * This field only surfaces when a Tweet contains a link. The meaning of the field doesn’t pertain
     * to the Tweet content itself, but instead it is an indicator that the URL contained in the Tweet
     * may contain content or media identified as sensitive content
     */
    possiblySensitive: boolean | null;
    /**
     * Engagement metrics tracked in a promoted context for the Tweet at the time of the request.
     * Requires user context authentication
     */
    promotedMetrics: TweetPromotedMetrics | null;
    /**
     * Public engagement metrics for the Tweet at the time of the request
     */
    publicMetrics: TweetPublicMetrics | null;
    /**
     * A list of Tweets this Tweet refers to. It will also include the related Tweet referenced to by its parent
     */
    referencedTweets: Array<TweetReference>;
    /**
     * Shows who can reply to the Tweet
     */
    replySettings: APITweetReplySettings | null;
    /**
     * The name of the app the user Tweeted from
     */
    source: string | null;
    /**
     * When present, contains withholding details for withheld content
     *
     * See https://help.twitter.com/en/rules-and-policies/tweet-withheld-by-country
     */
    withheld: TweetWithheld | null;
    constructor(client: Client, data: APITweet);
    /**
     * Likes this tweet.
     */
    like(): Promise<{
        liked: boolean;
    }>;
    /**
     * Unlikes this tweet.
     */
    unlike(): Promise<{
        liked: boolean;
    }>;
    /**
     * Hides this tweet from the tweet replies section.
     *
     * **Note:** This tweet should be a reply to a tweet of the authorized user
     */
    hide(): Promise<{
        hidden: boolean;
    }>;
    /**
     * Unhides this tweet.
     *
     * **Note:** This tweet should be a reply to a tweet of the authorized user
     */
    unhide(): Promise<{
        hidden: boolean;
    }>;
    /**
     * Retweets this tweet.
     */
    retweet(): Promise<{
        retweeted: boolean; /**
         * The language of the Tweet, if detected by Twitter. Returned as a `BCP47` language tag
         */
    }>;
    /**
     * Removes the retweet of this tweet.
     */
    unRetweet(): Promise<{
        retweeted: boolean;
    }>;
    /**
     * Sends a reply to this tweet
     * @param options The options for the reply
     * @returns The created reply
     */
    reply(options: TweetReplyOptions): Promise<{
        id: string;
        text: string;
    }>;
    /**
     * Quotes this tweet
     * @param options The options for quoting
     * @returns The created tweet
     */
    quote(options: TweetQuoteOptions): Promise<{
        id: string;
        text: string;
    }>;
    /**
     * Deletes this tweet.
     * @returns An object containing the `deleted` field
     */
    delete(): Promise<{
        deleted: boolean;
    }>;
}
/**
 * Options used to reply to a tweet
 */
export declare type TweetReplyOptions = Omit<TweetCreateOptions, 'inReplyToTweet'>;
/**
 * Options used to quote a tweet
 */
export declare type TweetQuoteOptions = Omit<TweetCreateOptions, 'quoteTweet'>;
//# sourceMappingURL=SimplifiedTweet.d.ts.map